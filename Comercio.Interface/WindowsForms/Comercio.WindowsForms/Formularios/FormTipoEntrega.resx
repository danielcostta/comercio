<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>